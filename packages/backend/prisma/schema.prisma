generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  role      String   @default("USER")
  orders    Order[]
  reviews   Review[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([email])
}

model Product {
  id          String        @id @default(uuid())
  name        String
  description String
  price       Float
  category    String
  imageUrl    String
  stock       Int           @default(0)
  orderItems  OrderItem[]
  reviews     Review[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  @@index([category])
}

model Order {
  id              String      @id @default(uuid())
  userId          String
  user            User        @relation(fields: [userId], references: [id])
  status          String      @default("PENDING")
  trackingNumber  String?
  total           Float
  shippingAddress String
  shippingCity    String
  shippingZip     String
  phone           String
  items           OrderItem[]
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt

  @@index([userId])
  @@index([status])
  @@index([trackingNumber])
}

model OrderItem {
  id        String   @id @default(uuid())
  orderId   String
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  quantity  Int
  price     Float
  createdAt DateTime @default(now())

  @@index([orderId])
  @@index([productId])
}

model Review {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  productId String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  rating    Int      // 1-5 stars
  comment   String
  helpful   Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([productId])
  @@index([rating])
}

model PromoCode {
  id          String   @id @default(uuid())
  code        String   @unique
  discount    Float    // Percentage (10 = 10%) or fixed amount
  type        String   // 'PERCENTAGE' or 'FIXED'
  minPurchase Float    @default(0)
  maxUses     Int      @default(0) // 0 = unlimited
  usedCount   Int      @default(0)
  isActive    Boolean  @default(true)
  expiresAt   DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([code])
  @@index([isActive])
}
